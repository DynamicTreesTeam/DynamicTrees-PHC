buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net/' }
		mavenCentral()
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
	}
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

repositories {
	flatDir {
		dirs("libs")
	}
}

version = "$project.mc_version-$project.mod_version"
group = package_group
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
	sourceCompatibility = targetCompatibility = '1.8'
}
sourceSets { main { output.resourcesDir = output.classesDir } }

minecraft {
	mappings channel: 'snapshot', version: project.mappings_version

	runs {
		client {
			workingDirectory project.file('run')

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'
		}

		server {

			// Recommended logging data for a userdev environment
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

			// Recommended logging level for the console
			property 'forge.logging.console.level', 'debug'
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:$project.mc_version-$project.forge_version"

	implementation fg.deobf("blank:DynamicTrees-1.12.2-0.9.28")
	implementation fg.deobf("blank:Hwyla-1.8.26-B41_1.12.2")
	implementation fg.deobf("blank:Pam's+HarvestCraft+1.12.2zg")
//	compileOnly fg.deobf("blank:SereneSeasons-1.12.2-1.2.18-universal")
}

processResources {
	inputs.property "version", project.mod_version
	inputs.property "mcversion", project.mc_version

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		expand 'version':project.mod_version, 'mcversion':project.mc_version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

//task deobfJar(type: Jar) {
//    from sourceSets.main.output
//    classifier = 'deobf'
//}
//
//tasks.build.dependsOn deobfJar
